import { Network, NetworkOptions } from './Network';
import { RelayData, RelayerMap } from './relay';
export interface CreateLocalOptions {
    chainOutputPath?: string;
    accountsToFund?: string[];
    fundAmount?: string;
    chains?: string[];
    relayInterval?: number;
    port?: number;
    relayers?: RelayerMap;
    afterRelay?: (relayData: RelayData) => void;
    callback?: (network: Network, info: any) => Promise<void>;
}
export interface CloneLocalOptions {
    chainOutputPath?: string;
    accountsToFund?: string[];
    fundAmount?: string;
    env?: string | any;
    chains?: string[];
    relayInterval?: number;
    port?: number;
    networkOptions?: NetworkOptions;
    relayers?: RelayerMap;
    afterRelay?: (relayData: RelayData) => void;
    callback?: (network: Network, info: any) => Promise<null>;
}
export declare function createAndExport(options?: CreateLocalOptions): Promise<void>;
export declare function forkAndExport(options?: CloneLocalOptions): Promise<void>;
export declare function destroyExported(relayers?: RelayerMap): Promise<void>;
//# sourceMappingURL=exportUtils.d.ts.map
import { Signer, ContractFactory, BytesLike, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type { AxelarAuthWeighted, AxelarAuthWeightedInterface } from "../../../../../@axelar-network/axelar-cgp-solidity/contracts/auth/AxelarAuthWeighted";
type AxelarAuthWeightedConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class AxelarAuthWeighted__factory extends ContractFactory {
    constructor(...args: AxelarAuthWeightedConstructorParams);
    deploy(recentOperators: PromiseOrValue<BytesLike>[], overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<AxelarAuthWeighted>;
    getDeployTransaction(recentOperators: PromiseOrValue<BytesLike>[], overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): AxelarAuthWeighted;
    connect(signer: Signer): AxelarAuthWeighted__factory;
    static readonly bytecode = "0x60806040523480156200001157600080fd5b5060405162001655380380620016558339810160408190526200003491620003aa565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3805160005b81811015620000c157620000ae8382815181106200009a576200009a620004e8565b6020026020010151620000ca60201b60201c565b620000b98162000514565b905062000078565b50505062000732565b600080600083806020019051810190620000e591906200059f565b82518251939650919450925090811580620001085750620001068562000280565b155b156200012757604051630849699d60e11b815260040160405180910390fd5b818114620001485760405163108cef9d60e31b815260040160405180910390fd5b6000805b8281101562000194578581815181106200016a576200016a620004e8565b6020026020010151826200017f919062000686565b91506200018c8162000514565b90506200014c565b50831580620001a257508381105b15620001c15760405163aabd5a0960e01b815260040160405180910390fd5b86516020808901919091206000818152600390925260409091205415620001fb5760405163adda47f760e01b815260040160405180910390fd5b600060015460016200020e919062000686565b60018190556000818152600260209081526040808320869055858352600390915290819020829055519091507f05b53362d4afea7533e835bd99f6c0f2c251e2f08b5c461734829516519dd5ac906200026d908a908a908a90620006a1565b60405180910390a1505050505050505050565b805160009081838183620002985762000298620004e8565b6020026020010151905060006001600160a01b0316816001600160a01b03161415620002c8575060009392505050565b60015b8281101562000330576000858281518110620002eb57620002eb620004e8565b60200260200101519050806001600160a01b0316836001600160a01b0316106200031b5750600095945050505050565b9150620003288162000514565b9050620002cb565b506001949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156200037c576200037c6200033b565b604052919050565b60006001600160401b03821115620003a057620003a06200033b565b5060051b60200190565b60006020808385031215620003be57600080fd5b82516001600160401b0380821115620003d657600080fd5b8185019150601f8681840112620003ec57600080fd5b825162000403620003fd8262000384565b62000351565b81815260059190911b840185019085810190898311156200042357600080fd5b8686015b83811015620004da57805186811115620004415760008081fd5b8701603f81018c13620004545760008081fd5b88810151878111156200046b576200046b6200033b565b6200047e818801601f19168b0162000351565b81815260408e81848601011115620004965760008081fd5b60005b83811015620004b6578481018201518382018e01528c0162000499565b83811115620004c85760008d85850101525b50508552505091870191870162000427565b509998505050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156200052b576200052b620004fe565b5060010190565b600082601f8301126200054457600080fd5b8151602062000557620003fd8362000384565b82815260059290921b840181019181810190868411156200057757600080fd5b8286015b848110156200059457805183529183019183016200057b565b509695505050505050565b600080600060608486031215620005b557600080fd5b83516001600160401b0380821115620005cd57600080fd5b818601915086601f830112620005e257600080fd5b81516020620005f5620003fd8362000384565b82815260059290921b8401810191818101908a8411156200061557600080fd5b948201945b838610156200064c5785516001600160a01b03811681146200063c5760008081fd5b825294820194908201906200061a565b918901519197509093505050808211156200066657600080fd5b50620006758682870162000532565b925050604084015190509250925092565b600082198211156200069c576200069c620004fe565b500190565b606080825284519082018190526000906020906080840190828801845b82811015620006e55781516001600160a01b031684529284019290840190600101620006be565b5050508381038285015285518082528683019183019060005b818110156200071c57835183529284019291840191600101620006fe565b5050809350505050826040830152949350505050565b610f1380620007426000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ba6742e51161005b578063ba6742e5146100ec578063d289d1cb1461010c578063f1501c8914610121578063f2fde38b1461014157600080fd5b806373e3d66a1461008257806376671808146100aa5780638da5cb5b146100c1575b600080fd5b610095610090366004610924565b610154565b60405190151581526020015b60405180910390f35b6100b360015481565b6040519081526020016100a1565b6000546100d4906001600160a01b031681565b6040516001600160a01b0390911681526020016100a1565b6100b36100fa366004610970565b60026020526000908152604090205481565b61011f61011a366004610989565b610201565b005b6100b361012f366004610970565b60036020526000908152604090205481565b61011f61014f3660046109e3565b61026f565b60008080808061016686880188610bc1565b9350935093509350600084848460405160200161018593929190610cb1565b60408051601f19818403018152918152815160209283012060008181526003909352912054600154919250908115806101c8575060106101c58383610d54565b10155b156101e657604051630849699d60e11b815260040160405180910390fd5b6101f38b8888888861034d565b149998505050505050505050565b6000546001600160a01b0316331461022c576040516330cd747160e01b815260040160405180910390fd5b61026b82828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061049f92505050565b5050565b6000546001600160a01b0316331461029a576040516330cd747160e01b815260040160405180910390fd5b6001600160a01b0381166102da576040517f49e27cff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b83518151600080805b838110156104655760006103838b88848151811061037657610376610d6b565b6020026020010151610689565b90505b85841080156103c057508984815181106103a2576103a2610d6b565b60200260200101516001600160a01b0316816001600160a01b031614155b156103d5576103ce84610d81565b9350610386565b8584141561040f576040517fc6fb539300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b88848151811061042157610421610d6b565b6020026020010151836104349190610d9c565b925087831061044857505050505050610498565b61045184610d81565b9350508061045e90610d81565b9050610356565b506040517f203b225800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b6000806000838060200190518101906104b89190610e0f565b825182519396509194509250908115806104d857506104d68561082c565b155b156104f657604051630849699d60e11b815260040160405180910390fd5b81811461052f576040517f84677ce800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000805b828110156105725785818151811061054d5761054d610d6b565b6020026020010151826105609190610d9c565b915061056b81610d81565b9050610533565b5083158061057f57508381105b156105b6576040517faabd5a0900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b86516020808901919091206000818152600390925260409091205415610608576040517fadda47f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060015460016106199190610d9c565b60018190556000818152600260209081526040808320869055858352600390915290819020829055519091507f05b53362d4afea7533e835bd99f6c0f2c251e2f08b5c461734829516519dd5ac90610676908a908a908a90610cb1565b60405180910390a1505050505050505050565b600081516041146106c6576040517f4be6321b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610732576040517f40c1e74800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060ff16601b1415801561074a57508060ff16601c14155b15610781576040517f119bce3900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040805160008082526020820180845289905260ff841692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa1580156107d5573d6000803e3d6000fd5b505050602060405103519450846001600160a01b03161415610823576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505092915050565b80516000908183818361084157610841610d6b565b6020026020010151905060006001600160a01b0316816001600160a01b03161415610870575060009392505050565b60015b828110156108d057600085828151811061088f5761088f610d6b565b60200260200101519050806001600160a01b0316836001600160a01b0316106108be5750600095945050505050565b91506108c981610d81565b9050610873565b506001949350505050565b60008083601f8401126108ed57600080fd5b50813567ffffffffffffffff81111561090557600080fd5b60208301915083602082850101111561091d57600080fd5b9250929050565b60008060006040848603121561093957600080fd5b83359250602084013567ffffffffffffffff81111561095757600080fd5b610963868287016108db565b9497909650939450505050565b60006020828403121561098257600080fd5b5035919050565b6000806020838503121561099c57600080fd5b823567ffffffffffffffff8111156109b357600080fd5b6109bf858286016108db565b90969095509350505050565b6001600160a01b03811681146109e057600080fd5b50565b6000602082840312156109f557600080fd5b8135610a00816109cb565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a4657610a46610a07565b604052919050565b600067ffffffffffffffff821115610a6857610a68610a07565b5060051b60200190565b600082601f830112610a8357600080fd5b81356020610a98610a9383610a4e565b610a1d565b82815260059290921b84018101918181019086841115610ab757600080fd5b8286015b84811015610ad25780358352918301918301610abb565b509695505050505050565b6000601f8381840112610aef57600080fd5b82356020610aff610a9383610a4e565b82815260059290921b85018101918181019087841115610b1e57600080fd5b8287015b84811015610bb557803567ffffffffffffffff80821115610b435760008081fd5b818a0191508a603f830112610b585760008081fd5b85820135604082821115610b6e57610b6e610a07565b610b7f828b01601f19168901610a1d565b92508183528c81838601011115610b965760008081fd5b8181850189850137506000908201870152845250918301918301610b22565b50979650505050505050565b60008060008060808587031215610bd757600080fd5b843567ffffffffffffffff80821115610bef57600080fd5b818701915087601f830112610c0357600080fd5b81356020610c13610a9383610a4e565b82815260059290921b8401810191818101908b841115610c3257600080fd5b948201945b83861015610c59578535610c4a816109cb565b82529482019490820190610c37565b98505088013592505080821115610c6f57600080fd5b610c7b88838901610a72565b9450604087013593506060870135915080821115610c9857600080fd5b50610ca587828801610add565b91505092959194509250565b606080825284519082018190526000906020906080840190828801845b82811015610cf35781516001600160a01b031684529284019290840190600101610cce565b5050508381038285015285518082528683019183019060005b81811015610d2857835183529284019291840191600101610d0c565b5050809350505050826040830152949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d6657610d66610d3e565b500390565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610d9557610d95610d3e565b5060010190565b60008219821115610daf57610daf610d3e565b500190565b600082601f830112610dc557600080fd5b81516020610dd5610a9383610a4e565b82815260059290921b84018101918181019086841115610df457600080fd5b8286015b84811015610ad25780518352918301918301610df8565b600080600060608486031215610e2457600080fd5b835167ffffffffffffffff80821115610e3c57600080fd5b818601915086601f830112610e5057600080fd5b81516020610e60610a9383610a4e565b82815260059290921b8401810191818101908a841115610e7f57600080fd5b948201945b83861015610ea6578551610e97816109cb565b82529482019490820190610e84565b91890151919750909350505080821115610ebf57600080fd5b50610ecc86828701610db4565b92505060408401519050925092509256fea264697066735822122088f7a1e352f598fdea211c345f919330df69b6e46fbdd06cfa42f7aea44c221664736f6c63430008090033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "recentOperators";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "DuplicateOperators";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidOperators";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidThreshold";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidV";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidWeights";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "LowSignaturesWeight";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "MalformedSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotOwner";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "newOperators";
            readonly type: "address[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "newWeights";
            readonly type: "uint256[]";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newThreshold";
            readonly type: "uint256";
        }];
        readonly name: "OperatorshipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "currentEpoch";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "epochForHash";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "hashForEpoch";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "params";
            readonly type: "bytes";
        }];
        readonly name: "transferOperatorship";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "messageHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "proof";
            readonly type: "bytes";
        }];
        readonly name: "validateProof";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): AxelarAuthWeightedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): AxelarAuthWeighted;
}
export {};
//# sourceMappingURL=AxelarAuthWeighted__factory.d.ts.map
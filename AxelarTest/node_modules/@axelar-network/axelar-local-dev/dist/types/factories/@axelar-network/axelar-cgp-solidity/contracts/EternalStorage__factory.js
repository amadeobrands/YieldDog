"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EternalStorage__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getBool",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getBytes",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getInt",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getString",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "key",
                type: "bytes32",
            },
        ],
        name: "getUint",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610354806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063bd02d0f511610050578063bd02d0f51461012a578063c031a18014610158578063dc97d9621461016b57600080fd5b806321f8a721146100775780637ae1cfca146100d7578063986e791a1461010a575b600080fd5b6100ad61008536600461024a565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100fa6100e536600461024a565b60009081526004602052604090205460ff1690565b60405190151581526020016100ce565b61011d61011836600461024a565b61018b565b6040516100ce91906102b0565b61014a61013836600461024a565b60009081526020819052604090205490565b6040519081526020016100ce565b61011d61016636600461024a565b61022d565b61014a61017936600461024a565b60009081526005602052604090205490565b60008181526001602052604090208054606091906101a8906102ca565b80601f01602080910402602001604051908101604052809291908181526020018280546101d4906102ca565b80156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b50505050509050919050565b60008181526003602052604090208054606091906101a8906102ca565b60006020828403121561025c57600080fd5b5035919050565b6000815180845260005b818110156102895760208185018101518683018201520161026d565b8181111561029b576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102c36020830184610263565b9392505050565b600181811c908216806102de57607f821691505b60208210811415610318577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212208de82a6c8b596ef7873260649031385260e4e63c6aa2f8f8e58736df69b41b0a64736f6c63430008090033";
const isSuperArgs = (xs) => xs.length > 1;
class EternalStorage__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.EternalStorage__factory = EternalStorage__factory;
EternalStorage__factory.bytecode = _bytecode;
EternalStorage__factory.abi = _abi;
//# sourceMappingURL=EternalStorage__factory.js.map
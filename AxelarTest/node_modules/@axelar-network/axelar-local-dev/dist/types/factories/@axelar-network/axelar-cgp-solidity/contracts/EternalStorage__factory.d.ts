import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { EternalStorage, EternalStorageInterface } from "../../../../@axelar-network/axelar-cgp-solidity/contracts/EternalStorage";
type EternalStorageConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class EternalStorage__factory extends ContractFactory {
    constructor(...args: EternalStorageConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<EternalStorage>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): EternalStorage;
    connect(signer: Signer): EternalStorage__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50610354806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063bd02d0f511610050578063bd02d0f51461012a578063c031a18014610158578063dc97d9621461016b57600080fd5b806321f8a721146100775780637ae1cfca146100d7578063986e791a1461010a575b600080fd5b6100ad61008536600461024a565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100fa6100e536600461024a565b60009081526004602052604090205460ff1690565b60405190151581526020016100ce565b61011d61011836600461024a565b61018b565b6040516100ce91906102b0565b61014a61013836600461024a565b60009081526020819052604090205490565b6040519081526020016100ce565b61011d61016636600461024a565b61022d565b61014a61017936600461024a565b60009081526005602052604090205490565b60008181526001602052604090208054606091906101a8906102ca565b80601f01602080910402602001604051908101604052809291908181526020018280546101d4906102ca565b80156102215780601f106101f657610100808354040283529160200191610221565b820191906000526020600020905b81548152906001019060200180831161020457829003601f168201915b50505050509050919050565b60008181526003602052604090208054606091906101a8906102ca565b60006020828403121561025c57600080fd5b5035919050565b6000815180845260005b818110156102895760208185018101518683018201520161026d565b8181111561029b576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102c36020830184610263565b9392505050565b600181811c908216806102de57607f821691505b60208210811415610318577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212208de82a6c8b596ef7873260649031385260e4e63c6aa2f8f8e58736df69b41b0a64736f6c63430008090033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getBool";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getBytes";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getInt";
        readonly outputs: readonly [{
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getString";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "key";
            readonly type: "bytes32";
        }];
        readonly name: "getUint";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): EternalStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): EternalStorage;
}
export {};
//# sourceMappingURL=EternalStorage__factory.d.ts.map
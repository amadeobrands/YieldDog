import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ITokenDeployer, ITokenDeployerInterface } from "../../../../../@axelar-network/axelar-cgp-solidity/contracts/interfaces/ITokenDeployer";
export declare class ITokenDeployer__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint8";
            readonly name: "decimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "cap";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }];
        readonly name: "deployToken";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ITokenDeployerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ITokenDeployer;
}
//# sourceMappingURL=ITokenDeployer__factory.d.ts.map